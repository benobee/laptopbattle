{"version":3,"sources":["meteor://ðŸ’»app/packages/monbro_iron-router-breadcrumb/packages/monbro_iron-router-breadcrumb.js"],"names":[],"mappingswG","file":"/packages/monbro_iron-router-breadcrumb.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                          //\n// packages/monbro:iron-router-breadcrumb/lib/breadcrumb.js                                 //\n//                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                            //\n/* Package-scope variables */                                                               // 1\nvar privateVar;                                                                             // 2\n                                                                                            // 3\nString.prototype.capitalize = function() {                                                  // 4\n  return this.replace(/(?:^|\\s)\\S/g, function(a) { return a.toUpperCase(); });              // 5\n};                                                                                          // 6\n                                                                                            // 7\nvar enrichRouteObject = function(path, isCurrent) {                                         // 8\n  // replace all parameters in the title                                                    // 9\n  var routeOptions = Router.routes[path] && Router.routes[path].options;                    // 10\n  var title = (routeOptions && routeOptions.hasOwnProperty('title')) ? routeOptions.title : Router.options.defaultBreadcrumbTitle;\n  if ('function' === typeof title)                                                          // 12\n    title = _.bind(title, Router.current())();                                              // 13\n  var params = Router.current().params;                                                     // 14\n  if (title) {                                                                              // 15\n    for (var i in params) {                                                                 // 16\n      title = title && title.replace(                                                       // 17\n        new RegExp((':'+i).replace(/\\+/g, \"\\\\+\"), \"g\"), params[i]);                         // 18\n    }                                                                                       // 19\n    if (!Router.routes[path].options.noCaps)                                                // 20\n      title = title && title.capitalize();                                                  // 21\n  } else {                                                                                  // 22\n    title = null;                                                                           // 23\n                                                                                            // 24\n  }                                                                                         // 25\n                                                                                            // 26\n  if(isCurrent) {                                                                           // 27\n    cssClasses = 'active';                                                                  // 28\n  } else {                                                                                  // 29\n    cssClasses = '';                                                                        // 30\n  }                                                                                         // 31\n                                                                                            // 32\n  // handle showlink attribute                                                              // 33\n  // 1) if set, by route,                                                                   // 34\n  // 2) fallback to global flag,                                                            // 35\n  // 3) fallback to default value which is true                                             // 36\n  var showLink = true;                                                                      // 37\n  if(typeof Router.routes[path].options.showLink !== 'undefined') {                         // 38\n    showLink = Router.routes[path].options.showLink;                                        // 39\n  } else if(typeof Router.options.defaultBreadcrumbLastLink !== 'undefined' && isCurrent) { // 40\n    showLink = Router.options.defaultBreadcrumbLastLink;                                    // 41\n  }                                                                                         // 42\n                                                                                            // 43\n  if (title) return {                                                                       // 44\n    'path': path,                                                                           // 45\n    'params': params,                                                                       // 46\n    'title': title,                                                                         // 47\n    'showLink': showLink,                                                                   // 48\n    'cssClasses': cssClasses,                                                               // 49\n    'url': Router.routes[path].path(Router.current().params),                               // 50\n    'route': Router.routes[path]                                                            // 51\n  }                                                                                         // 52\n}                                                                                           // 53\n                                                                                            // 54\nvar getAllParents = function() {                                                            // 55\n  if(Router.current().route) {                                                              // 56\n    var current = Router.current().route.getName();                                         // 57\n    var parent = Router.current().route.options.hasOwnProperty('parent') ? Router.current().route.options.parent : Router.options.parent;\n    if ('function' === typeof parent)                                                       // 59\n      parent = _.bind(parent, Router.current())()                                           // 60\n                                                                                            // 61\n    if(parent) {                                                                            // 62\n      return getParentParent([enrichRouteObject(current,true),enrichRouteObject(parent)]);  // 63\n    } else {                                                                                // 64\n      return [enrichRouteObject(current)];                                                  // 65\n    }                                                                                       // 66\n  } else {                                                                                  // 67\n    // no routes have been specified                                                        // 68\n    return [];                                                                              // 69\n  }                                                                                         // 70\n                                                                                            // 71\n}                                                                                           // 72\n                                                                                            // 73\n// parents must be always an array                                                          // 74\nvar getParentParent = function(parents) {                                                   // 75\n  var lastParent = parents[parents.length-1];                                               // 76\n  if(newParent = (lastParent && Router.routes[lastParent.path].options.parent)) {           // 77\n    if ('function' === typeof newParent)                                                    // 78\n      newParent = _.bind(newParent, Router.current())()                                     // 79\n    parents.push(enrichRouteObject(newParent))                                              // 80\n    return getParentParent(parents);                                                        // 81\n  } else {                                                                                  // 82\n    return parents;                                                                         // 83\n  }                                                                                         // 84\n}                                                                                           // 85\n                                                                                            // 86\nBreadcrumb = {                                                                              // 87\n  getAll: function() {                                                                      // 88\n    return _.compact(getAllParents()).reverse();                                            // 89\n  }                                                                                         // 90\n};                                                                                          // 91\n                                                                                            // 92\nUI.registerHelper('Breadcrumb', function(template) {                                        // 93\n  return Breadcrumb.getAll();                                                               // 94\n});                                                                                         // 95\n                                                                                            // 96\n//////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}